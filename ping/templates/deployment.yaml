apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ping.fullname" . }}
  labels:
    {{- include "ping.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ping.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ping.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ping.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ . }}
      {{- end }}

# I'm going to use "affinity" to meet the requirements
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          # Here I exclude scheduling on nodes with certain labels
            nodeSelectorTerms:
            {{- range .Values.nodeAntiAffinityLabels }}
            - matchExpressions:
              - key: {{ .key }}
                operator: NotIn
                values:
                {{- toYaml .values | nindent 18 }}
            {{- end }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector: 
          # With this rule I prevent pods from scheduling on the 
          # same node (defined by topologyKey)
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - {{ include "ping.name" . }}
            topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution: 
          # I use "preferred" because I understand that the goal is to have the pod in at least two different zones.
          # Using "preferred" I prioritize scheduling on different zones in case two nodes belong to the same zone.
          # If all zones have a pod, and another needs to be scheduled, it can repeat a zone.
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "ping.name" . }}
              topologyKey: topology.kubernetes.io/zone